name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v5
      with:
        java-version: 17
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Extract version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        
    - name: Update version in pom.xml
      run: mvn versions:set -DnewVersion=${{ steps.get_version.outputs.VERSION }}
      
    - name: Build release
      run: mvn clean package -DskipTests
      
    - name: Get artifact name
      id: get_artifact
      run: |
        ARTIFACT_NAME=$(ls target/*.jar | grep -v original | head -1)
        echo "ARTIFACT_NAME=${ARTIFACT_NAME}" >> $GITHUB_OUTPUT
        echo "ARTIFACT_BASENAME=$(basename ${ARTIFACT_NAME})" >> $GITHUB_OUTPUT
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false
        body: |
          ## UltraTournamentsPlusPlus v${{ steps.get_version.outputs.VERSION }}
          
          ### Changes
          - Auto-generated release from tag ${{ github.ref }}
          
          ### Installation
          1. Download the JAR file below
          2. Place it in your server's `plugins` folder
          3. Configure the Discord bot token in `config.yml`
          4. Restart your server
          
          ### Requirements
          - Spigot/Paper 1.20.1+
          - Java 17+
          - Discord Bot Token (for Discord integration)
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.get_artifact.outputs.ARTIFACT_NAME }}
        asset_name: ${{ steps.get_artifact.outputs.ARTIFACT_BASENAME }}
        asset_content_type: application/java-archive