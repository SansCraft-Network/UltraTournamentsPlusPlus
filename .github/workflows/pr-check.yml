name: Pull Request Check

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  validate:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up JDK 17
      uses: actions/setup-java@v5
      with:
        java-version: 17
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Validate Maven project
      run: mvn validate
      
    - name: Compile project
      run: mvn clean compile
      
    - name: Run tests
      run: mvn test
      
    - name: Package without deploy
      run: mvn package -DskipTests
      
    - name: Comment PR
      uses: actions/github-script@v7
      if: always()
      with:
        script: |
          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
          });
          
          const botComment = comments.find(comment => 
            comment.user.type === 'Bot' && 
            comment.body.includes('ü§ñ Build Status')
          );
          
          const status = '${{ job.status }}' === 'success' ? '‚úÖ Passed' : '‚ùå Failed';
          const timestamp = new Date().toISOString();
          
          const body = 'ü§ñ **Build Status**: ' + status + '\n\n' +
            '**Commit**: `' + context.sha.substring(0, 7) + '`\n' +
            '**Timestamp**: ' + timestamp + '\n' +
            '**Workflow**: [' + context.workflow + '](' + context.payload.repository.html_url + '/actions/runs/' + context.runId + ')\n\n' +
            (status === '‚úÖ Passed' ? 
              '‚úÖ All checks passed! This PR is ready for review.' : 
              '‚ùå Some checks failed. Please review the workflow logs and fix any issues.');
          if (botComment) {
            github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: botComment.id,
              body: body
            });
          } else {
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: body
            });
          }